<Window x:Class="Paint.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Paint"
        xmlns:converters="clr-namespace:Paint.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <converters:BoolToVisibilityReversedConverter x:Key="boolToVisibilityReversedConverter"/>



        <Style TargetType="ToggleButton" x:Key="toggleButtonStyle" >

            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}">
                                </ContentPresenter>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style.Setters>
            <Style.Triggers>

                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter Property="Button.Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="LightGray"></Setter>
                    <Setter Property="Button.BorderThickness" Value="0,0,1,1"></Setter>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked"  Value="true">
                    <Setter Property="Button.Background" Value="LightGray"></Setter>
                    <Setter Property="Button.BorderBrush" Value="Gray"></Setter>
                    <Setter Property="Button.BorderThickness" Value="1,1,0,0"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="RadioButton" x:Key="{x:Type RadioButton}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}">
                                </ContentPresenter>

                            </Border> 
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style.Setters>
            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="LightGray"></Setter>
                    <Setter Property="BorderThickness" Value="0,0,2,2"></Setter>
                </Trigger>
                <Trigger Property="IsChecked"  Value="true">
                    <Setter Property="Background" Value="LightGray"></Setter>
                    <Setter Property="BorderBrush" Value="Gray"></Setter>
                    <Setter Property="BorderThickness" Value="2,2,0,0"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

       
    </Window.Resources>



    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>


        <Canvas Name="canvas" Grid.Row="1" Grid.Column="1" Background="White" Cursor="Cross" MouseDown="Canvas_MouseDown" MouseMove="Canvas_MouseMove" MouseUp="Canvas_MouseUp">


        </Canvas>


        <!-- ***********************************************************  ↓ Верхняя панель  ↓ ********************************************************************-->
        
        <ToolBar Grid.Row="0" Padding="5" Grid.ColumnSpan="2">

        <!--  Картинка -->
            
            <Grid Width="50" Height="22">

                <Polyline Visibility="{Binding ElementName=ArrowButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}"
                          VerticalAlignment="Center" HorizontalAlignment="Center" 
                          Stroke="#000000" Points="10,13 16,13 4,1 4,18 8,14 10,18 12,17 10,13"/>

                <Grid Visibility="{Binding ElementName=PencilButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Polyline Stroke="Black" Points="4.144,12.625 15.525,2.4 18.07,5.233 6.688,15.456 "/>
                    <Polygon Stroke="Black" Points="6.547,15.456 2.477,16.506 4.144,12.712 "/>
                    <Polygon Stroke="Black" Points="3.892,15.906 2.645,16.242 3.221,15.139 "/>
                </Grid>

                <Ellipse Visibility="{Binding ElementName=EllipseButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}"
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Stroke="Black" Width="20" Height="20"/>

                <Rectangle Visibility="{Binding ElementName=RectangleButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}"
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Stroke="Black" Width="20" Height="20"/>

                <Polygon Visibility="{Binding ElementName=TriangleButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}"
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Stroke="Black" Width="20" Height="20" Points="0,20 10,0 20,20"/>
            </Grid>


            <!--  Stroke  -->
            
            <TextBlock  Text="Stroke: " Visibility="{Binding ElementName=ArrowButton, Path=IsChecked, Converter={StaticResource boolToVisibilityReversedConverter}}"/>
            
            <Border Name="diameterBorder" Visibility="{Binding ElementName=ArrowButton, Path=IsChecked, Converter={StaticResource boolToVisibilityReversedConverter}}">
                <StackPanel Orientation="Horizontal">

                    <TextBox Name="diameterTextBox" Width="50" VerticalAlignment="Stretch" TextAlignment="Right" Text="{Binding Diameter, UpdateSourceTrigger=PropertyChanged}" BorderBrush="Gray" BorderThickness="1,1,0,0"/>
                    <Popup PlacementTarget="{Binding ElementName=diameterTextBox}" IsOpen="{Binding ElementName=diameterButton, Path=IsChecked}" StaysOpen="False">

                        <Border BorderBrush="Gray" BorderThickness="1" Background="White">
                            <Slider Margin="5" Width="100" Minimum="0" Maximum="100" Value="{Binding Diameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                        
                    </Popup>
                    <ToggleButton Name="diameterButton" Grid.Column="1" Width="15" VerticalAlignment="Stretch" Style="{StaticResource toggleButtonStyle}" >
                        <Path Margin="2" VerticalAlignment="Center"  Fill="Black"  Data="M 0,0 L3,3 L 6,0  "/>
                    </ToggleButton>
                </StackPanel>
            </Border>
            
            
            <!--  Opacity  -->

            <TextBlock  Text="  Opacity: " Visibility="{Binding ElementName=ArrowButton, Path=IsChecked, Converter={StaticResource boolToVisibilityReversedConverter}}"/>

            <Border Name="opacityBorder" Visibility="{Binding ElementName=ArrowButton, Path=IsChecked, Converter={StaticResource boolToVisibilityReversedConverter}}">
                <StackPanel Orientation="Horizontal">

                    <TextBox Name="opacityTextBox" Width="50" VerticalAlignment="Stretch" TextAlignment="Right" Text="{Binding Opacity, UpdateSourceTrigger=PropertyChanged, StringFormat=0.00 }" BorderBrush="Gray" BorderThickness="1,1,0,0"/>
                    <Popup PlacementTarget="{Binding ElementName=opacityTextBox}" IsOpen="{Binding ElementName=opacityButton, Path=IsChecked}" StaysOpen="False">

                        <Border BorderBrush="Gray" BorderThickness="1" Background="White">
                            <Slider Margin="5" Width="100" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>

                    </Popup>
                    <ToggleButton Name="opacityButton" Grid.Column="1" Width="15" VerticalAlignment="Stretch" Style="{StaticResource toggleButtonStyle}" >
                        <Path Margin="2" VerticalAlignment="Center"  Fill="Black"  Data="M 0,0 L3,3 L 6,0  "/>
                    </ToggleButton>
                </StackPanel>
            </Border>
            
            
            <!--  Radius  -->

            <TextBlock  Text="  Radius: " Visibility="{Binding ElementName=RectangleButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}"/>

            <Border Name="radiusBorder" Visibility="{Binding ElementName=RectangleButton, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal">

                    <TextBox Name="radiusTextBox" Width="50" VerticalAlignment="Stretch" TextAlignment="Right" Text="{Binding Radius, UpdateSourceTrigger=PropertyChanged, StringFormat=0 }" BorderBrush="Gray" BorderThickness="1,1,0,0"/>
                    <Popup PlacementTarget="{Binding ElementName=radiusTextBox}" IsOpen="{Binding ElementName=radiusButton, Path=IsChecked}" StaysOpen="False">

                        <Border BorderBrush="Gray" BorderThickness="1" Background="White">
                            <Slider Margin="5" Width="100" Minimum="0" Maximum="500" Value="{Binding Radius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>

                    </Popup>
                    <ToggleButton Name="radiusButton" Grid.Column="1" Width="15" VerticalAlignment="Stretch" Style="{StaticResource toggleButtonStyle}" >
                        <Path Margin="2" VerticalAlignment="Center"  Fill="Black"  Data="M 0,0 L3,3 L 6,0  "/>
                    </ToggleButton>
                </StackPanel>
            </Border>




        </ToolBar>

        
        
        
<!--***************************************************  ↓ Левая панель  ↓  ************************************************************-->
        
        <Border Grid.Row="1" Grid.Column="0" BorderThickness="1" BorderBrush="LightGray" Background="White">
            <StackPanel Margin="3" >

                <RadioButton Margin="0,10,0,0" Name="ArrowButton" Width="30" Height="30" GroupName="buttons" Checked="ArrowButton_Checked" Unchecked="ArrowButton_Unchecked">
                    <Polyline Stroke="#000000" Points="10,13 16,13 4,1 4,18 8,14 10,18 12,17 10,13"/>
                </RadioButton>

                <Separator Margin="10,20"/>

                <RadioButton Name="PencilButton"  IsChecked="True" Width="30" Height="30" GroupName="buttons">
                    <Grid>
                        <Polyline Stroke="Black" Points="4.144,12.625 15.525,2.4 18.07,5.233 6.688,15.456 "/>
                        <Polygon Stroke="Black" Points="6.547,15.456 2.477,16.506 4.144,12.712 "/>
                        <Polygon Stroke="Black" Points="3.892,15.906 2.645,16.242 3.221,15.139 "/>
                    </Grid>
                </RadioButton>

                <RadioButton Name="EllipseButton" Width="30" Height="30"  GroupName="buttons">
                    <Ellipse  Stroke="Black" Width="20" Height="20"></Ellipse>
                </RadioButton>
                <RadioButton Name="RectangleButton" Width="30" Height="30"  GroupName="buttons">
                    <Rectangle  Stroke="Black" Width="20" Height="20"></Rectangle>
                </RadioButton>
                <RadioButton Name="TriangleButton" Width="30" Height="30"  GroupName="buttons">
                    <Polygon Stroke="Black" Width="20" Height="20" Points="0,20 10,0 20,20"></Polygon>
                </RadioButton>

                <Separator Margin="10,20"/>


                <StackPanel Orientation="Horizontal" >
                    <Grid MouseDown="ColorReset_MouseDown" Margin="5,0,0,0">
                        <Border Margin="5,5,0,0"   Width="8" Height="8"  BorderBrush="Gray" BorderThickness="1" Background="White"/>
                        <Border Width="8" Height="8"  BorderBrush="Gray" BorderThickness="1" Background="Black"/>
                    </Grid>

                    <Grid Margin="15,3,0,0" Width="15" Height="12" Background="Transparent" MouseDown="ReverseColor_MouseDown">
                        <Polygon  Points="0,3 3,0 3,6" Fill="Black"/>
                        <Polyline Stroke="Black" StrokeThickness="1" Points="3,3 8,3 8,8"/>
                        <Polygon Margin="5,8,0,0" Points="0,0 6,0 3,3" Fill="Black"/>
                    </Grid>
                </StackPanel>

                <Grid Margin="0,5,10,0" >


                    <Border Name="backgroundColorBorder" Margin="15,15,0,0"   Width="25" Height="25"  BorderBrush="Gray" BorderThickness="1" MouseDown="BackgroundColorBorder_MouseDown">
                        <Border.Background>
                            <SolidColorBrush Color="{Binding BackgroundColor}"/>
                        </Border.Background>
                    </Border>

                    <Border  Name="colorBorder"  Width="25" Height="25" BorderBrush="Gray" BorderThickness="1" MouseDown="ColorBorder_MouseDown">
                        <Border.Background>
                            <SolidColorBrush Color="{Binding ForegroundColor}"/>
                        </Border.Background>

                    </Border>
                </Grid>


            </StackPanel>
        </Border>

      
        
            
        
    </Grid>
</Window>

            